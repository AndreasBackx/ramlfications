{
    "test_uri_parameters": [{
        "apiPath": {
                "description": "This is the additional path for some api",
                "type": "string",
                "example": "barbaz",
                "displayName": "API Path"
        }
    }],
    "FIXME - test_resource_type": {
        "foo": {
            "get": {
                "description": "Get some foo"
            },
            "post": {
                "description": "Post some foo"
            }
        },
        "base": {
            "get?": {
                "headers": {
                    "Accept": {
                        "description": "Is used to set specified media type.",
                        "type": "string"
                    }
                },
                "responses": {
                    "403": {
                        "description": "API rate limit exceeded. See http://developer.spotify.com/web-api/#rate-limiting for details.\n"
                    }
                }
            },
            "post?": {
                "headers": {
                    "Accept": {
                        "description": "Is used to set specified media type.",
                        "type": "string"
                    }
                },
                "responses": {
                    "403": {
                        "description": "API rate limit exceeded. See http://developer.spotify.com/web-api/#rate-limiting for details.\n"
                    }
                }
            }
        },
        "item": {
            "get?": null,
            "type": "base"
        },
        "collection": {
            "get?": null,
            "type": "base"
        }
    },
    "test_documentation": {
        "title": "Spotify Web API Docs",
        "content": "Welcome to the _Spotify Web API_ demo specification. This is *not* the complete API\nspecification, and is meant for testing purposes within this RAML specification.\nFor more information about how to use the API, check out [developer\n site](https://developer.spotify.com/web-api/).\n"
    },
    "test_security_schemes_oauth1": {
        "description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred.\n",
        "type": "OAuth 1.0",
        "settings": {
            "requestTokenUri": "https://api.dropbox.com/1/oauth/request_token",
            "authorizationUri": "https://www.dropbox.com/1/oauth/authorize",
            "tokenCredentialsUri": "https://api.dropbox.com/1/oauth/access_token"
        }
    },
    "test_security_schemes_other": {
        "basic": {
            "description": "The Foo Web API supports HTTP Basic Authentication\n",
            "type": "Basic Authentication"
        },
        "digest":{
            "description": "The Foo Web API supports HTTP Digest Authentication\n",
            "type": "Digest Authentication"
        },
        "other": {
            "describedBy": {
                "headers": {
                    "X-Foo-Auth": {
                        "description": "Foo's super awesome home-grown authentication.  Complete with\nour own home-grown cryptography! /s\n",
                        "displayName": "Foo Auth"
                    }
                }
            },
            "description": "The Foo Web API supports its home-grown authentication, Foo Auth\n",
            "type": "x-foo-auth"
        }
    },
    "test_schema": {
            "CreatePlaylist": {
                "name": "New Playlist",
                "public": false
            },
            "Playlist": {
                "$schema": "http://json-schema.org/draft-03/schema",
                "properties": {
                    "api_link": {
                        "description": "API resource address of the entity.",
                        "type": "string"
                    },
                    "collaborative": {
                        "description": "True if the owner allows other users to modify the playlist.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A description of the playlist.",
                        "type": "string"
                    },
                    "followers_count": {
                        "description": "The number of users following the playlist.",
                        "type": "number"
                    },
                    "id": {
                        "description": "ID of the playlist.",
                        "type": "string"
                    },
                    "image": {
                        "description": "URL of a picture associated with the playlist.",
                        "type": "string"
                    },
                    "items": {
                        "description": "Contents of the playlist (an array of Track objects).",
                        "items": {
                            "$ref": "Track.json"
                        },
                        "type": "array"
                    },
                    "link": {
                        "description": "HTTP link of the entity.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the playlist.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "User.json",
                        "description": "User who owns the playlist."
                    },
                    "published": {
                        "description": "Indicates whether the playlist is publicly discoverable. This does not restrict access for users who already know the playlist's URI.",
                        "type": "boolean"
                    },
                    "uri": {
                        "description": "Spotify URI of the entity.",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }

}
