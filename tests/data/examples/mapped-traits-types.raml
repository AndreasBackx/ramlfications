#%RAML 0.8
title: Example API - Mapped Traits and Resource Types
version: v1
baseUri: https://api.example.com
resourceTypes:
  - searchableCollection:
      get:
        queryParameters:
          <<queryParamName>>:
            description: Return <<resourcePathName>> that have their <<queryParamName>> matching the given value
          <<fallbackParamName>>:
            description: If no values match the value given for <<queryParamName>>, use <<fallbackParamName>> instead
  - collection:
      usage: This resourceType should be used for any collection of items
      description: The collection of <<resourcePathName>>
      get:
        description: Get all <<resourcePathName>>, optionally filtered
      post:
        description: Create a new <<resourcePathName | !singularize>>
traits:
  - secured:
      description: A secured method
      queryParameters:
        <<tokenName>>:
          description: A valid <<tokenName>> is required
  - paged:
      queryParameters:
        numPages:
          description: The number of pages to return, not to exceed <<maxPages>>
  - formTrait:
      formParameters:
        aFormTrait:
          description: A form trait for testing purposes.
/books:
  type: { searchableCollection: { queryParamName: title, fallbackParamName: digest_all_fields } }
  get:
    is: [ secured: { tokenName: access_token }, paged: { maxPages: 10 } ]
  post:
    description: Should not have query parameters assigned even though parent type is searchableCollection
/magazines:
  type: collection
  get:
    is: [ secured: { tokenName: access_token}, paged: { maxPages: 20} ]
/foobar:
  displayName: foobar
  get:
    is: [ formTrait ]
